name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: DBPass
          POSTGRES_DB: wd-todo-dev
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

      - name: Build Docker image
        run: docker build . -t my-app:latest

      - name: Push Docker image to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker tag my-app:latest ${{ secrets.DOCKER_USERNAME }}/my-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-app:latest

      - name: Deploy to Server
        run: |
          ssh user@server "docker pull ${{ secrets.DOCKER_USERNAME }}/my-app:latest && docker-compose -f /path/to/docker-compose.prod.yml up -d"

      - name: Notify on Discord
        if: failure()
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d '{"content": "Deployment failed for ${{ github.repository }} on branch ${{ github.ref }}"}' \
            ${{ secrets.DISCORD_WEBHOOK_URL }}
